X <- as.matrix(cbind(x1+ x3 + x4 +x5 +x6 +x3x5))
X
X <- as.matrix(cbind(x1+ x3 + x4 +x5 +x6 +x3x5))
dim(X)
X <- as.matrix(cbind(x1,x3,as.numeric(x4),as.numeric(x5),as.numeric(x6),x3x5))
dim(X)
insurance <- read.csv("data/insurance.csv",head=T)
rep(1,9)
n
attach(insurance)
#variabel definition
y <- charges
x1 <- age
x2 <- sex
x3 <- bmi
x4 <- children
x5 <- smoker
x6 <- region
x1x5 <- age*as.numeric(smoker)
x3x5 <- bmi*as.numeric(smoker)
X <- as.matrix(cbind(rep(1,length(y)),x1,x3,as.numeric(x4),as.numeric(x5),as.numeric(x6),x3x5))
dim(X)
head(X)
as.numeric(x4)
n <- dim(X)[1]
n
n <- dim(X)[1]
k <- dim(X)[2]
mm <- c(2,3,2,3)
mn <- c(2,1,3,1)
mm*mn
str(insurance)
mod2 <- lm(y ~ x1+ x3 + x4 +x5 +x6 +x3x5)
summary(mod2)
solve(X%*%t(X))%*%(X*y)
solve(X%*%t(X))%*%(X*y)
solve(X%*%t(X))%*%(X%*%y)
y
X
solve(t(X)%*%X)%*%t(X)%*%y
X <- as.matrix(cbind(rep(1,length(y)),x1,x3,x4,as.numeric(x5),as.numeric(x6),x3x5))
dim(X)
solve(t(X)%*%X)%*%t(X)%*%y
#prior calculation
nuo <- 1
s20 <- summary(mod2)$sigma^2
g <- n
s20
s20^0.5
#posterior calclation
Hg <- (g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
Vbeta <- g*solve(t(X)%*%X)/(g+1)
Ebeta <- Vbeta %*% t(X) %*% y
# simulation monte carlo
s2.post<-beta.post<-NULL
for(s in 1:5000)
{
s2.post<-c(s2.post,1/rgamma(1, (nu0+n)/2, (nu0*s20+SSRg)/2 ) )
beta.post<-rbind(beta.post, rmvnorm(1,Ebeta,s2.post[s]*Vbeta))
}
#prior parameter
nu0 <- 1
s20 <- summary(mod2)$sigma^2 #prior variation from ols
g <- n
# simulation monte carlo
s2.post<-beta.post<-NULL
for(s in 1:5000)
{
s2.post<-c(s2.post,1/rgamma(1, (nu0+n)/2, (nu0*s20+SSRg)/2 ) )
beta.post<-rbind(beta.post, rmvnorm(1,Ebeta,s2.post[s]*Vbeta))
}
install.packages("dae")
library(dae)
#posterior calclation
Hg <- (g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
Vbeta <- g*solve(t(X)%*%X)/(g+1)
Ebeta <- Vbeta %*% t(X) %*% y
# simulation monte carlo
s2.post<-beta.post<-NULL
for(s in 1:5000)
{
s2.post<-c(s2.post,1/rgamma(1, (nu0+n)/2, (nu0*s20+SSRg)/2 ) )
beta.post<-rbind(beta.post, rmvnorm(1,Ebeta,s2.post[s]*Vbeta))
}
n<-dim(X)[1];
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2))
S <- 1000
n<-dim(X)[1];
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2))
Vb<-g*solve(t(X)%*%X)/(g+1)
Eb<-Vb%*%t(X)%*%y
E<- matrix(rnorm(S*p,0,sqrt(s2)),S,p
n<-dim(X)[1];
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2))
Vb<-g*solve(t(X)%*%X)/(g+1)
Eb<-Vb%*%t(X)%*%y
E<- matrix(rnorm(S*p,0,sqrt(s2)),S,p)
beta<-t(t(E%*%chol(Vb))+c(Eb))
colSums(beta)/S
colSums(beta)/S
mod2
beta
s2
?rgamma
rgamma(10,2,3)
1/rgamma(10,2,3)
Vb
chol(Vb)
c(Eb)
Eb
E
shape(E)
dim(E)
colSums(E)/S
colSums(beta)/S
library(tidyr)
signif = apply(beta, MARGIN = 2, FUN = quantile, probs = c(0.025, 0.5, 0.975)) %>%
apply(MARGIN = 2, FUN = function(y) !(y[1] < 0 && 0 < y[3]))
beta_df = as.data.frame(beta) %>%
gather(key = 'variable', val = 'coefficient') %>%
mutate(signif = signif[variable])
library(tidyr)
library(dplyr)
library(ggplo2)
library(tidyr)
library(dplyr)
library(ggplot2)
signif = apply(beta, MARGIN = 2, FUN = quantile, probs = c(0.025, 0.5, 0.975)) %>%
apply(MARGIN = 2, FUN = function(y) !(y[1] < 0 && 0 < y[3]))
beta_df = as.data.frame(beta) %>%
gather(key = 'variable', val = 'coefficient') %>%
mutate(signif = signif[variable])
ggplot(beta_df, aes(x = variable, y = coefficient, color = signif)) +
stat_summary(fun.y = mean, fun.ymin = function(y) quantile(y, probs = c(0.025)), fun.ymax = function(y) quantile(y, probs = c(0.975))) +
geom_hline(yintercept = 0, lty = 2)
b <- colSums(beta)/S
b
ycap <- X%*%c(b)
ycap
y
mean((y-yap)^2)
mean((y-ycap)^2)
y-ycap
mean(abs(y-ycap))
abs(y-ycap)
mean(abs(y-ycap))
sum(abs(y-ycap))
sum(abs(y-ycap))/1000
bys <- data.frame(y,ycap)
bys
ggplot(bys,aes(y,ycap)) +
geom_point()+
geom_smooth(method='lm')
qqplot(abs(y-ycap))
qqplot(ycap)
qqplot(y,ycap)
qqplot(y,abs(y-ycap))
insurance <-- read.csv("data/insurance.csv",head=TURE)
insurance <-- read.csv("data/insurance.csv",head=TRUE)
str(insurance)
insurance <-- read.csv("data/insurance.csv",header = =TRUE)
insurance <-- read.csv("data/insurance.csv",header = TRUE)
insurance <-- read.csv("data/insurance.csv",head = TRUE)
str(insurance)
insurance <-  read.csv("https://github.com/novalsaputra/val_proj/raw/master/bayesian-linear-regression-in-r/data/insurance.csv",head=TRUE)
str(insurance)
attach(insurance)
st <- str(insurance)
st$
r
st$age
str(insurance)
insurance <-  read.csv("https://github.com/novalsaputra/val_proj/raw/master/bayesian-linear-regression-in-r/data/insurance.csv",head=TRUE)
str(insurance)
plot.age <- ggplot(insurance, aes(x = age, y = charges)) +
geom_point()
library(ggplot2)
plot.age <- ggplot(insurance, aes(x = age, y = charges)) +
geom_point()
plot.bmi <- ggplot(insurance, aes(x = bmi, y = charges)) +
geom_point()
grid.arrange(plot.age, plot.bmi, ncol=2)
library(ggplot2)
library(gridExtra)
plot.age <- ggplot(insurance, aes(x = age, y = charges)) +
geom_point()
plot.bmi <- ggplot(insurance, aes(x = bmi, y = charges)) +
geom_point()
grid.arrange(plot.age, plot.bmi, ncol=2)
age1 <- ggplot(insurance, aes(x = age, y = charges,col=sex)) + geom_point()
age2 <- ggplot(insurance, aes(x = age, y = charges,col=bmi)) + geom_point()
age3 <- ggplot(insurance, aes(x = age, y = charges,col=children)) + geom_point()
age4 <- ggplot(insurance, aes(x = age, y = charges,col=smoker)) + geom_point()
age5 <- ggplot(insurance, aes(x = age, y = charges,col=region)) + geom_point()
grid.arrange(age1,age2,age3,age4,age5,ncol=2)
age1 <- ggplot(insurance, aes(x = age, y = charges,col=sex)) + geom_point()
age2 <- ggplot(insurance, aes(x = age, y = charges,col=bmi)) + geom_point()
age3 <- ggplot(insurance, aes(x = age, y = charges,col=children)) + geom_point()
age4 <- ggplot(insurance, aes(x = age, y = charges,col=smoker)) + geom_point()
age5 <- ggplot(insurance, aes(x = age, y = charges,col=region)) + geom_point()
grid.arrange(age1,age2,age3,age4,age5,ncol=2)
bmi1 <- ggplot(insurance, aes(x = bmi, y = charges,col=sex)) + geom_point()
bmi2 <- ggplot(insurance, aes(x = bmi, y = charges,col=age)) + geom_point()
bmi3 <- ggplot(insurance, aes(x = bmi, y = charges,col=children)) + geom_point()
bmi4 <- ggplot(insurance, aes(x = bmi, y = charges,col=smoker)) + geom_point()
bmi5 <- ggplot(insurance, aes(x = bmi, y = charges,col=region)) + geom_point()
grid.arrange(bmi1,bmi2,bmi3,bmi4,bmi5,ncol=2)
plot.sex <- ggplot(insurance, aes(x = sex, y = charges)) +
geom_boxplot()
plot.smoker <- ggplot(insurance, aes(x = smoker, y = charges)) +
geom_boxplot()
plot.child <- ggplot(insurance, aes(x = as.factor(children), y = charges)) +
geom_boxplot()
plot.region <- ggplot(insurance, aes(x = region, y = charges)) +
geom_boxplot()
grid.arrange(plot.sex, plot.smoker, plot.child, plot.region, ncol=2, nrow=2)
#variabel definition
y <- charges
x1 <- age
x2 <- sex
x3 <- bmi
x4 <- children
x5 <- smoker
x6 <- region
x1x5 <- age*as.numeric(smoker)
x3x5 <- bmi*as.numeric(smoker)
mod1 <- lm(y ~ x1+x2+x3+x4+x5+x6+x1x5 + x3x5)
summary(mod1)
mod2 <- lm(y ~ x1+ x3 + x4 +x5 +x6 +x3x5)
summary(mod2)
insurance <- read.csv("data/insurance.csv",head=TRUE)
str(insurance)
attach(insurance)
#variabel definition
y <- charges
x1 <- age
x2 <- sex
x3 <- bmi
x4 <- children
x5 <- smoker
x6 <- region
x1x5 <- age*as.numeric(smoker)
x3x5 <- bmi*as.numeric(smoker)
mod2 <- lm(y ~ x1+ x3 + x4 +x5 +x6 +x3x5)
summary(mod2)
X <- as.matrix(cbind(rep(1,length(y)),x1,x3,x4,as.numeric(x5),as.numeric(x6),x3x5))
dim(X)
n <- dim(X)[1]
p <- dim(X)[2]
#prior parameter
nu0 <- 1
s20 <- summary(mod2)$sigma^2 #prior variation from ols
g <- n
S <- 1000
insurance <-  read.csv("https://github.com/novalsaputra/val_proj/raw/master/bayesian-linear-regression-in-r/data/insurance.csv",head=TRUE)
#monte Carlo
n<-dim(X)[1];
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2)) #gamma sample
Vb<-g*solve(t(X)%*%X)/(g+1)
Eb<-Vb%*%t(X)%*%y
E<- matrix(rnorm(S*p,0,sqrt(s2)),S,p) #sample beta
b <- colSums(beta)/S
beta<-t(t(E%*%chol(Vb))+c(Eb))
b <- colSums(beta)/S
b
ycap <- X%*%c(b)
bys <- data.frame(y,ycap)
ggplot(bys,aes(y,ycap)) +
geom_point()+
geom_smooth(method='lm')
library(ggplot2)
ycap <- X%*%c(b)
bys <- data.frame(y,ycap)
ggplot(bys,aes(y,ycap)) +
geom_point()+
geom_smooth(method='lm')
ggplot(bys) + geom_smooth(aes(x=y,y=ycap))
ggplot(bys,aes(y,abs(y-ycap)) +
.
1
ggplot(bys,aes(y,abs(y-ycap)) +
geom_smooth(method='lm')
.
ggplot(bys,aes(y,abs(y-ycap))) +
geom_point()+
geom_smooth(method='lm')
ggplot(bys,aes(y,abs(y-ycap))) +
geom_point()+
geom_smooth()
mean(abs(y-ycap))
beata
X <- as.matrix(cbind(rep(1,length(y)),x1,x3,x4,as.numeric(x5),as.numeric(x6),x3x5))
dim(X)
#monte Carlo
n<-dim(X)[1]
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2)) #gamma sample
#prior parameter
nu0 <- 1
s20 <- summary(mod2)$sigma^2 #prior variation from ols
g <- n
S <- 1000
#monte Carlo
n<-dim(X)[1]
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2)) #gamma sample
Vb<-g*solve(t(X)%*%X)/(g+1)
Eb<-Vb%*%t(X)%*%y
E<- matrix(rnorm(S*p,0,sqrt(s2)),S,p) #sample beta
beta<-t(t(E%*%chol(Vb))+c(Eb))
b <- colSums(beta)/S
b
insurance <-  read.csv("https://github.com/novalsaputra/val_proj/raw/master/bayesian-linear-regression-in-r/data/insurance.csv",head=TRUE)
str(insurance)
library(ggplot2)
library(gridExtra)
#variabel definition
attach(insurance)
y <- charges
x1 <- age
x2 <- sex
x3 <- bmi
x4 <- children
x5 <- smoker
x6 <- region
x1x5 <- age*as.numeric(smoker)
x3x5 <- bmi*as.numeric(smoker)
mod1 <- lm(y ~ x1+x2+x3+x4+x5+x6+x1x5 + x3x5)
summary(mod1)
x6 <- insurance$region
x6 <- as.matrix(x6)
x6a <- matrix(rep(0,length(x6)),ncol=1)
for (i in 1:length(x6)){
if (x6[i]=="northwest"){
x6a[i] = 1
}
else (x6a[i]=0)
}
x6b <- matrix(rep(0,length(x6)),ncol=1)
for (i in 1:length(x6)){
if (x6[i]=="southeast"){
x6b[i] = 1
}
else (x6b[i]=0)
}
x6c <- matrix(rep(0,length(x6)),ncol=1)
for (i in 1:length(x6)){
if (x6[i]=="southwest"){
x6c[i] = 1
}
else (x6c[i]=0)
}
table(x6a)
table(x6b)
table(x6c)
mod <- lm(y ~ x1+x2+x3+x4+x5+x6+x6a+x6b+x6c+x1x5+x3x5)
summary(mod)
x6a
str(x6a)
str(x1)
as.integer(x6a)
x6a <- as.integer(x6a)
str(x6a)
x6a <- as.integer(x6a)
x6b <- as.integer(x6b)
x6c <- as.integer(x6c)
mod <- lm(y ~ x1+x2+x3+x4+x5+x6+x6a+x6b+x6c+x1x5+x3x5)
summary(mod)
mod <- lm(y ~ x1+x2+x3+x4+x5+x6a+x6b+x6c+x1x5+x3x5)
summary(mod)
mod2 <- lm(y ~ x1+ x3 + x4 +x5 +x6 +x3x5)
summary(mod2)
X <- as.matrix(cbind(rep(1,length(y)),x1,x3,x4,x6a,x6b,x6c,x3x5))
dim(X)
X
n <- dim(X)[1]
p <- dim(X)[2]
#prior parameter
nu0 <- 1
s20 <- summary(mod2)$sigma^2 #prior variation from ols
g <- n
S <- 1000
#posterior calclation
Hg <- (g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
Vbeta <- g*solve(t(X)%*%X)/(g+1)
Ebeta <- Vbeta %*% t(X) %*% y
#monte Carlo
n<-dim(X)[1]
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2)) #gamma sample
Vb<-g*solve(t(X)%*%X)/(g+1)
Eb<-Vb%*%t(X)%*%y
E<- matrix(rnorm(S*p,0,sqrt(s2)),S,p) #sample beta
beta<-t(t(E%*%chol(Vb))+c(Eb))
b <- colSums(beta)/S
b
mod2
X <- as.matrix(cbind(rep(1,length(y)),x1,x3,x4,x5,x6a,x6b,x6c,x3x5))
dim(X)
n <- dim(X)[1]
p <- dim(X)[2]
#prior parameter
nu0 <- 1
s20 <- summary(mod2)$sigma^2 #prior variation from ols
g <- n
S <- 1000
#posterior calclation
Hg <- (g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
Vbeta <- g*solve(t(X)%*%X)/(g+1)
Ebeta <- Vbeta %*% t(X) %*% y
#monte Carlo
n<-dim(X)[1]
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2)) #gamma sample
Vb<-g*solve(t(X)%*%X)/(g+1)
Eb<-Vb%*%t(X)%*%y
E<- matrix(rnorm(S*p,0,sqrt(s2)),S,p) #sample beta
b <- colSums(beta)/S
b
n <- dim(X)[1]
p <- dim(X)[2]
#prior parameter
nu0 <- 1
s20 <- summary(mod2)$sigma^2 #prior variation from ols
g <- n
S <- 1000
#posterior calclation
Hg <- (g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
Vbeta <- g*solve(t(X)%*%X)/(g+1)
Ebeta <- Vbeta %*% t(X) %*% y
#monte Carlo
n<-dim(X)[1]
p<-dim(X)[2]
Hg<-(g/(g+1))*X%*%solve(t(X)%*%X)%*%t(X)
SSRg<- t(y)%*%(diag(1,nrow=n)-Hg)%*%y
s2<-1/rgamma(S,(nu0+n)/2,(nu0*s20+SSRg/2)) #gamma sample
Vb<-g*solve(t(X)%*%X)/(g+1)
Eb<-Vb%*%t(X)%*%y
E<- matrix(rnorm(S*p,0,sqrt(s2)),S,p) #sample beta
beta<-t(t(E%*%chol(Vb))+c(Eb))
b <- colSums(beta)/S
b
mod2
ycap <- X%*%c(b)
bys <- data.frame(y,ycap)
ggplot(bys,aes(y,abs(y-ycap))) +
geom_point()+
geom_smooth()
x6a
x6a[1]
x6a[2]
x6a[4]
as.numeric(rep(0,length(x6)))
as.integer(rep(0,length(x6)))
as.matrix(x6)
str(as.matrix(x6))
x6[1]
range(5)
range(10)
x6 <- region
x6a <- as.integer(rep(0,length(x6)))
x6b <- as.integer(rep(0,length(x6)))
x6c <- as.integer(rep(0,length(x6)))
for (i in 1:length(x6)){
if (x6[i]=="northwest"){
x6a[i] = 1
}
else if (x6[i]=="southeast"){
x6b[i] = 1
}
else if (x6[i]=="southwest"){
x6c[i] =1
}
else {
x6a[i] = 0
x6b[i] = 0
x6c[i] = 0
}
}
table(x6a)
table(x6b)
table(x6c)
x6
X
b <- colSums(beta)/S
b
b
